USE amazondb;

-- 1.List all customers who have made purchases of more than $80.

SELECT  
users.user_id,
users.firstname AS Customer_Name,
SUM(total_amount) AS total_spent

FROM users
LEFT JOIN orders
ON users.user_id=orders.user_id
GROUP BY user_id
HAVING total_spent >'80';


-- 2. Retrieve all orders placed in the last 280 days along with the customer name and email.

SELECT  
users.firstname,
users.email,
orders.order_date

FROM users
RIGHT JOIN orders
ON users.user_id=orders.user_id
WHERE order_date <= CURDATE()- INTERVAL 280 DAY;


-- 3.Find the average product price for each category.

SELECT 
	category,
    AVG(price) as avarage_price
FROM products
GROUP BY category;


-- 4.List all customers who have purchased a product from the category Electronics

SELECT 
users.user_id,
users.firstname,
products.productname,
products.category

FROM OrderDetails
LEFT JOIN products ON OrderDetails.product_id = products.product_id
RIGHT JOIN orders ON OrderDetails.order_id = orders.order_id
LEFT JOIN users ON orders.user_id = users.user_id
WHERE category='Electronics';


-- 5.Find the total number of products sold and the total revenue generated for each product.

SELECT 
products.product_id,
products.productname,
sum(quantity) AS Total_no_of_Product_sold,
sum(Price * quantity) AS Total_Revenue

FROM Products
RIGHT JOIN OrderDetails ON products.product_id=OrderDetails.product_id 
GROUP BY product_id;


-- 6.Update the price of all products in the Books category, increasing it by 10%.Query

SET SQL_SAFE_UPDATES=0;

UPDATE products
SET price= price * 1.10
WHERE category='Books';


-- 7.Remove all orders that were placed before 2020

DELETE FROM orders
WHERE order_date <'2020-01-01';


-- 8. Fetch the order details, including customer name, product name, and quantity, for orders placed on 2024-11-01.

SELECT 
firstname,
productname,
quantity

FROM users 
RIGHT JOIN orders ON users.user_id=orders.user_id
LEFT JOIN OrderDetails ON orders.order_id = OrderDetails.order_id
LEFT JOIN products ON OrderDetails.product_id = products.product_id
WHERE order_date='2024-11-01';


-- 9.Fetch all customers and the total number of orders they have placed

SELECT
firstname,
count(order_id) AS Total_orders

FROM users
LEFT JOIN orders ON users.user_id=orders.user_id
GROUP BY users.user_id, users.firstname;


-- 10. Retrieve the average rating for all products in the Electronics category.

SELECT 
productname,
avg(price) AS AVerage_Rating
FROM products
WHERE category ='Electronics'
GROUP BY productname;


-- 11.List all customers who purchased more than 1 units of any product, including the product name and total quantity purchased

SELECT 
firstname AS Customer,
productname AS Product_Name,
sum(quantity) AS Total_Quantity

FROM products
RIGHT JOIN orderdetails ON products.product_id=orderdetails.product_id
LEFT JOIN orders ON orderdetails.order_id=orders.order_id
LEFT JOIN users ON users.user_id=orders.user_id

GROUP BY  products.product_id , users.user_id
HAVING Total_Quantity >1;


-- 12.Find the total revenue generated by each category along with the category name.

SELECT 
category,
sum(total_amount) AS Total_Revenue

FROM products
RIGHT JOIN orderdetails ON products.product_id=orderdetails.product_id
LEFT JOIN orders ON orderdetails.order_id= orders.order_id
GROUP BY category;


